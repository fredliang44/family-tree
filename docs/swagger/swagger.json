{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a Family Tree API server.",
        "title": "Family Tree API",
        "contact": {
            "name": "Fred Liang",
            "url": "https://blog.fredliang.cn",
            "email": "info@fredliang.cn"
        },
        "license": {
            "name": "Mozilla 2.0",
            "url": "https://github.com/fredliang44/family-tree/blob/master/LICENSE"
        },
        "version": "1.0"
    },
    "host": "fmt.fredliang.cn",
    "paths": {
        "/init_db": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "InitDB for unit test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "InitDB",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.StdResp"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Respond pong to ping request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "HealthCheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.Ping"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register after verify sms code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Verify Register Code",
                        "name": "Register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.VerifyResp"
                        }
                    },
                    "400": {
                        "description": "DB Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.ErrResp"
                        }
                    }
                }
            }
        },
        "/register_code": {
            "post": {
                "description": "Generate register phone sms auth code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gen Register Code",
                "parameters": [
                    {
                        "description": "Gen Register Code",
                        "name": "GenCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.GenCodeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.StdResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.ErrResp"
                        }
                    }
                }
            }
        },
        "/reset": {
            "post": {
                "description": "Phrase reset password request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Verify Reset Code",
                        "name": "ResetPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.ResetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.VerifyResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.ErrResp"
                        }
                    }
                }
            }
        },
        "/reset_password_code": {
            "post": {
                "description": "Generate register phone sms auth code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gen Reset Code",
                "parameters": [
                    {
                        "description": "Gen Reset Code",
                        "name": "GenResetCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.GenResetCodeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.StdResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/utils.ErrResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.ErrResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "DB Error Message"
                }
            }
        },
        "utils.GenCodeReq": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "phone": {
                    "type": "string",
                    "example": "17777777777"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "utils.GenResetCodeReq": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "utils.Ping": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Pong"
                }
            }
        },
        "utils.RegisterReq": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "username"
                },
                "verifyCode": {
                    "type": "string",
                    "example": "1234"
                }
            }
        },
        "utils.ResetReq": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                },
                "verifyCode": {
                    "type": "string",
                    "example": "1234"
                }
            }
        },
        "utils.StdResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "utils.VerifyResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "OK"
                },
                "status": {
                    "type": "string",
                    "example": "Verified"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}